{"version":3,"sources":["src/utils/index.js","src/screens/Latest/logic.js","src/screens/Popular/logic.js","src/screens/Search/logic.js","src/screens/Genre/logic.js","src/screens/Detail/logic.js","src/container/CustomNavigationBar/logic.js","src/screens/Episode/logic.js","src/context/GlobalContext.js","src/components/Loader/index.js","src/screens/Detail/index.js","src/container/CustomNavigationBar/index.js","src/components/Empty/index.js","src/components/ListItem/index.js","src/container/AnimeList/index.js","src/screens/Latest/index.js","src/screens/Search/index.js","src/screens/Genre/index.js","src/container/VideoPlayer/index.js","src/screens/Episode/index.js","src/index.js","App.js"],"names":["handleError","response","a","async","json","res","code","status","message","errorMessage","statusText","apiCall","method","params","data","url","headers","queryString","Object","keys","length","URLSearchParams","toString","request","body","JSON","stringify","fetch","ok","Promise","reject","LATEST_LOGIC","reducer","state","action","type","loading","error","flag","next","payload","actions","latestAction","dispatch","results","console","log","latestMoreAction","latestResetAction","initialState","POPULAR_LOGIC","popularAction","popularMoreAction","popularResetAction","SEARCH_LOGIC","searchAction","searchMoreAction","searchResetAction","GENRE_LOGIC","genreAction","genreMoreAction","genreResetAction","GENRE_TYPE_LOGIC","genreTypeAction","genreTypeResetAction","DETAIL_LOGIC","detailAction","detailResetAction","THEME_LOGIC","themeAction","EPISODE_LOGIC","episodeAction","episodeResetAction","GlobalContext","createContext","intermediate","styles","StyleSheet","create","messageText","color","container","flex","snackbar","GlobalProvider","children","useState","setMessage","forEach","item","useReducer","boundActions","enhancedDispatch","successMessage","applyMiddleware","key","Provider","value","View","style","Snackbar","duration","visible","onDismiss","Text","alignItems","justifyContent","flexDirection","Loader","ActivityIndicator","size","scrollContainer","flexGrow","detailContainer","padding","title","fontWeight","subDetailContainer","caption","marginRight","paragraph","marginVertical","tagContainer","flexWrap","tag","marginBottom","episodeContainer","episode","width","marginLeft","episodeText","Detail","route","navigation","useContext","setEpisode","useEffect","id","Dimensions","get","height","ScrollView","contentContainerStyle","Image","resizeMode","source","uri","image","Subheading","relased","Caption","summary","Paragraph","genres","map","i","Chip","mode","icon","totalepisode","parseInt","Array","from","Button","onPress","navigate","onPressEpisode","labelStyle","CustomNavigationBar","previous","isThemeDark","Appbar","Header","BackAction","goBack","Content","Switch","onValueChange","Empty","ListItem","Card","Cover","Title","titleStyle","subtitle","episodenumber","fontSize","AnimeList","loadMoreRows","onRefresh","FlatList","ListEmptyComponent","refreshing","columnWrapperStyle","wrapper","onEndReached","onEndReachedThreshold","numColumns","renderItem","TouchableOpacity","card","onPressIn","Platform","OS","keyExtractor","paddingVertical","margin","Latest","useRef","current","searchBarContainer","marginHorizontal","marginTop","Search","searchQuery","setSearchQuery","allUrl","getUrl","page","searchUrl","onSubmit","Searchbar","placeholder","onChangeText","query","onIconPress","onSubmitEditing","cardContainer","cardContent","paddingHorizontal","typeButton","typeContainer","Genre","modalizeRef","genreType","genreUrl","onChangeGenre","close","toUpperCase","IconButton","disabled","open","Portal","modalHeight","ref","backgroundColor","VideoPlayer","video","React","setStatus","useWindowDimensions","Video","shouldPlay","useNativeControls","onPlaybackStatusUpdate","alignSelf","Episode","lockAsync","OrientationLock","LANDSCAPE","PORTRAIT_UP","link","links","isArray","SafeAreaView","src","Stack","createStackNavigator","RootStack","Tab","createBottomTabNavigator","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","text","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","prefix","Linking","Main","theme","linking","prefixes","config","screens","Dashboard","NavigationContainer","Navigator","Screen","name","options","headerShown","initialRouteName","screenOptions","header","props","backBehavior","component","tabBarIcon","MaterialIcons","MaterialCommunityIcons","StatusBar","App"],"mappings":"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","file":"static/js/app.a8aba116.chunk.js","sourcesContent":["export const handleError = async (response) => {\n  try {\n    const res = await response.json()\n    return {\n      code: response.status,\n      message: res.errorMessage || 'Something went wrong, Please try again later!'\n    }\n  } catch (error) {\n    return {\n      code: response.status || 'unknown issue',\n      message: response.statusText || 'Something went wrong, Please try again later!'\n    }\n  }\n}\n\nexport const apiCall = async ({\n  method = 'GET', params = {}, data = {}, url = '', headers = {}\n}) => {\n  const mainUrl = 'https://watch-my-anime.herokuapp.com/api'\n  const queryString = params && Object.keys(params).length ? `?${new URLSearchParams(params).toString()}` : ''\n  const request = {\n    method,\n    ...data && typeof data === 'object' && Object.keys(data).length ? { body: JSON.stringify(data) } : {},\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers\n    }\n  }\n  try {\n    const res = await (fetch(`${mainUrl}${url}${queryString}`, request))\n    if (res.ok) {\n      const response = await res.json()\n      return response\n    } else {\n      const response = await handleError(res)\n      return Promise.reject(response);\n    }\n  } catch (error) {\n    return Promise.reject({\n      code: 'unknown issue',\n      message: 'Something went wrong, Please try again later!'\n    })\n  } \n}","import { apiCall } from '../../utils';\n\nconst LATEST = 'LATEST'\nconst LATEST_SUCCESS = 'LATEST_SUCCESS'\nconst LATEST_MORE = 'LATEST_MORE'\nconst LATEST_MORE_SUCCESS = 'LATEST_MORE_SUCCESS'\nconst LATEST_FAILURE = 'LATEST_FAILURE'\nconst LATEST_RESET = 'LATEST_RESET'\n\nconst latestAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: LATEST })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/recentlyadded/${data}`,\n    })\n    dispatch({ type: LATEST_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: LATEST_FAILURE })\n  }\n}\n\nconst latestMoreAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: LATEST_MORE })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/recentlyadded/${data}`,\n    })\n    dispatch({ type: LATEST_MORE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: LATEST_FAILURE })\n  }\n}\n\nconst latestResetAction = dispatch => () => {\n  dispatch({ type: LATEST_RESET })\n}\n\nconst latestReducer = (state, action) => {\n  switch (action.type) {\n    case LATEST: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: [],\n        flag: false,\n        errorMessage: '',\n        next: true\n      }\n    }\n    case LATEST_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== action.payload.length\n      }\n    }\n    case LATEST_MORE: {\n      return {\n        ...state,\n        flag: false\n      }\n    }\n    case LATEST_MORE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: [...state.data, ...action.payload],\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== [...state.data, ...action.payload].length\n      }\n    }\n    case LATEST_RESET: {\n      return {\n        ...state,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case LATEST_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: [],\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const LATEST_LOGIC = {\n  reducer: latestReducer,\n  actions: { latestAction, latestMoreAction, latestResetAction },\n  initialState: { data: [], loading: true, error: false, flag: false, errorMessage: '', next: true }\n}","import { apiCall } from '../../utils';\n\nconst POPULAR = 'POPULAR'\nconst POPULAR_SUCCESS = 'POPULAR_SUCCESS'\nconst POPULAR_MORE = 'POPULAR_MORE'\nconst POPULAR_MORE_SUCCESS = 'POPULAR_MORE_SUCCESS'\nconst POPULAR_FAILURE = 'POPULAR_FAILURE'\nconst POPULAR_RESET = 'POPULAR_RESET'\n\nconst popularAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: POPULAR })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/popular/${data}`,\n    })\n    dispatch({ type: POPULAR_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: POPULAR_FAILURE })\n  }\n}\n\nconst popularMoreAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: POPULAR_MORE })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/popular/${data}`,\n    })\n    dispatch({ type: POPULAR_MORE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: POPULAR_FAILURE })\n  }\n}\n\nconst popularResetAction = dispatch => () => {\n  dispatch({ type: POPULAR_RESET })\n}\n\nconst popularReducer = (state, action) => {\n  switch (action.type) {\n    case POPULAR: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: [],\n        flag: false,\n        errorMessage: '',\n        next: true\n      }\n    }\n    case POPULAR_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== action.payload.length\n      }\n    }\n    case POPULAR_MORE: {\n      return {\n        ...state,\n        flag: false\n      }\n    }\n    case POPULAR_MORE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: [...state.data, ...action.payload],\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== [...state.data, ...action.payload].length\n      }\n    }\n    case POPULAR_RESET: {\n      return {\n        ...state,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case POPULAR_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: [],\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const POPULAR_LOGIC = {\n  reducer: popularReducer,\n  actions: { popularAction, popularMoreAction, popularResetAction },\n  initialState: { data: [], loading: false, error: false, flag: false, errorMessage: '', next: true }\n}","import { apiCall } from '../../utils';\n\nconst SEARCH = 'SEARCH'\nconst SEARCH_SUCCESS = 'SEARCH_SUCCESS'\nconst SEARCH_MORE = 'SEARCH_MORE'\nconst SEARCH_MORE_SUCCESS = 'SEARCH_MORE_SUCCESS'\nconst SEARCH_FAILURE = 'SEARCH_FAILURE'\nconst SEARCH_RESET = 'SEARCH_RESET'\n\nconst searchAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: SEARCH })\n    const response = await apiCall({\n      method: 'GET',\n      url: data,\n    })\n    dispatch({ type: SEARCH_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: SEARCH_FAILURE })\n  }\n}\n\nconst searchMoreAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: SEARCH_MORE })\n    const response = await apiCall({\n      method: 'GET',\n      url: data,\n    })\n    dispatch({ type: SEARCH_MORE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: SEARCH_FAILURE })\n  }\n}\n\nconst searchResetAction = dispatch => () => {\n  dispatch({ type: SEARCH_RESET })\n}\n\nconst searchReducer = (state, action) => {\n  switch (action.type) {\n    case SEARCH: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: [],\n        flag: false,\n        errorMessage: '',\n        next: true\n      }\n    }\n    case SEARCH_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== action.payload.length\n      }\n    }\n    case SEARCH_MORE: {\n      return {\n        ...state,\n        flag: false\n      }\n    }\n    case SEARCH_MORE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: [...state.data, ...action.payload],\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== [...state.data, ...action.payload].length\n      }\n    }\n    case SEARCH_RESET: {\n      return {\n        ...state,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case SEARCH_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: [],\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const SEARCH_LOGIC = {\n  reducer: searchReducer,\n  actions: { searchAction, searchMoreAction, searchResetAction },\n  initialState: { data: [], loading: true, error: false, flag: false, errorMessage: '', next: true }\n}","import { apiCall } from '../../utils';\n\nconst GENRE = 'GENRE'\nconst GENRE_SUCCESS = 'GENRE_SUCCESS'\nconst GENRE_MORE = 'GENRE_MORE'\nconst GENRE_MORE_SUCCESS = 'GENRE_MORE_SUCCESS'\nconst GENRE_FAILURE = 'GENRE_FAILURE'\nconst GENRE_RESET = 'GENRE_RESET'\n\nconst genreAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: GENRE })\n    const response = await apiCall({\n      method: 'GET',\n      url: data,\n    })\n    dispatch({ type: GENRE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: GENRE_FAILURE })\n  }\n}\n\nconst genreMoreAction = dispatch => async (data = 1) => {\n  try {\n    dispatch({ type: GENRE_MORE })\n    const response = await apiCall({\n      method: 'GET',\n      url: data,\n    })\n    dispatch({ type: GENRE_MORE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: GENRE_FAILURE })\n  }\n}\n\nconst genreResetAction = dispatch => () => {\n  dispatch({ type: GENRE_RESET })\n}\n\nconst genreReducer = (state, action) => {\n  switch (action.type) {\n    case GENRE: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: [],\n        flag: false,\n        errorMessage: '',\n        next: true\n      }\n    }\n    case GENRE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== action.payload.length\n      }\n    }\n    case GENRE_MORE: {\n      return {\n        ...state,\n        flag: false\n      }\n    }\n    case GENRE_MORE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: [...state.data, ...action.payload],\n        flag: true,\n        errorMessage: '',\n        next: state.data.length !== [...state.data, ...action.payload].length\n      }\n    }\n    case GENRE_RESET: {\n      return {\n        ...state,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case GENRE_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: [],\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const GENRE_LOGIC = {\n  reducer: genreReducer,\n  actions: { genreAction, genreMoreAction, genreResetAction },\n  initialState: { data: [], loading: false, error: false, flag: false, errorMessage: '', next: true }\n}\n\n\nconst GENRE_TYPE = 'GENRE_TYPE'\nconst GENRE_TYPE_SUCCESS = 'GENRE_TYPE_SUCCESS'\nconst GENRE_TYPE_FAILURE = 'GENRE_TYPE_FAILURE'\nconst GENRE_TYPE_RESET = 'GENRE_TYPE_RESET'\n\nconst genreTypeAction = dispatch => async (data) => {\n  try {\n    dispatch({ type: GENRE_TYPE })\n    const response = await apiCall({\n      method: 'GET',\n      url: '/genrelist',\n    })\n    dispatch({ type: GENRE_TYPE_SUCCESS, payload: response.results || [] })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: GENRE_TYPE_FAILURE })\n  }\n}\n\nconst genreTypeResetAction = dispatch => () => {\n  dispatch({ type: GENRE_TYPE_RESET })\n}\n\nconst genreTypeReducer = (state, action) => {\n  switch (action.type) {\n    case GENRE_TYPE: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: [],\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case GENRE_TYPE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: ['popular', ...action.payload],\n        flag: true,\n        errorMessage: ''\n      }\n    }\n    case GENRE_TYPE_RESET: {\n      return {\n        ...state,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case GENRE_TYPE_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: [],\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const GENRE_TYPE_LOGIC = {\n  reducer: genreTypeReducer,\n  actions: { genreTypeAction, genreTypeResetAction },\n  initialState: { data: [], loading: true, error: false, flag: false, errorMessage: '' }\n}","import { apiCall } from '../../utils';\n\nconst DETAIL = 'DETAIL'\nconst DETAIL_SUCCESS = 'DETAIL_SUCCESS'\nconst DETAIL_FAILURE = 'DETAIL_FAILURE'\nconst DETAIL_RESET = 'DETAIL_RESET'\n\nconst detailAction = dispatch => async (data) => {\n  try {\n    dispatch({ type: DETAIL })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/details/${data}`,\n    })\n    dispatch({ type: DETAIL_SUCCESS, payload: response.results || {} })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: DETAIL_FAILURE })\n  }\n}\n\nconst detailResetAction = dispatch => () => {\n  dispatch({ type: DETAIL_RESET })\n}\n\nconst detailReducer = (state, action) => {\n  switch (action.type) {\n    case DETAIL: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: {},\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case DETAIL_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: ''\n      }\n    }\n    case DETAIL_RESET: {\n      return {\n        ...state,\n        data: {},\n        loading: true,\n        error: false,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case DETAIL_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: {},\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const DETAIL_LOGIC = {\n  reducer: detailReducer,\n  actions: { detailAction, detailResetAction },\n  initialState: { data: {}, loading: true, error: false, flag: false, errorMessage: '' }\n}","const THEME = 'THEME'\n\nconst themeAction = dispatch => async () => {\n  dispatch({\n    type: THEME\n  })\n}\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case THEME: \n      return !state\n    default:\n      return state;\n  }\n};\n\nexport const THEME_LOGIC = {\n  reducer: themeReducer,\n  actions: { themeAction },\n  initialState: true\n}","import { apiCall } from '../../utils';\n\nconst EPISODE = 'EPISODE'\nconst EPISODE_SUCCESS = 'EPISODE_SUCCESS'\nconst EPISODE_FAILURE = 'EPISODE_FAILURE'\nconst EPISODE_RESET = 'EPISODE_RESET'\n\nconst episodeAction = dispatch => async (data) => {\n  try {\n    dispatch({ type: EPISODE })\n    const response = await apiCall({\n      method: 'GET',\n      url: `/watching/${data}`,\n    })\n    dispatch({ type: EPISODE_SUCCESS, payload: response || {} })\n  } catch (error) {\n    console.log(error)\n    if (error.response) {\n      console.log(error.response)\n    }\n    dispatch({ type: EPISODE_FAILURE })\n  }\n}\n\nconst episodeResetAction = dispatch => () => {\n  dispatch({ type: EPISODE_RESET })\n}\n\nconst episodeReducer = (state, action) => {\n  switch (action.type) {\n    case EPISODE: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: {},\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case EPISODE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload,\n        flag: true,\n        errorMessage: ''\n      }\n    }\n    case EPISODE_RESET: {\n      return {\n        ...state,\n        data: {},\n        loading: true,\n        error: false,\n        flag: false,\n        errorMessage: ''\n      }\n    }\n    case EPISODE_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        data: {},\n        flag: false,\n        errorMessage: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const EPISODE_LOGIC = {\n  reducer: episodeReducer,\n  actions: { episodeAction, episodeResetAction },\n  initialState: { data: {}, loading: true, error: false, flag: false, errorMessage: '' }\n}","import React, { createContext, useReducer, useState } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Snackbar, Text } from 'react-native-paper'\nimport { LATEST_LOGIC } from '../screens/Latest/logic'\nimport { POPULAR_LOGIC } from '../screens/Popular/logic'\nimport { SEARCH_LOGIC } from '../screens/Search/logic'\nimport { GENRE_LOGIC, GENRE_TYPE_LOGIC } from '../screens/Genre/logic'\nimport { DETAIL_LOGIC } from '../screens/Detail/logic'\nimport { THEME_LOGIC } from '../container/CustomNavigationBar/logic'\nimport { EPISODE_LOGIC } from '../screens/Episode/logic'\n\nexport const GlobalContext = createContext({})\n\nconst intermediate = {\n  THEME_LOGIC,\n  LATEST_LOGIC,\n  POPULAR_LOGIC,\n  SEARCH_LOGIC,\n  GENRE_LOGIC,\n  GENRE_TYPE_LOGIC,\n  DETAIL_LOGIC,\n  EPISODE_LOGIC\n}\n\nfunction GlobalProvider({ children }) {\n  const [message, setMessage] = useState('')\n  const data = {}\n  const applyMiddleware = dispatch => action => {\n    if (action.successMessage) {\n      setMessage(action.successMessage)\n    }\n    dispatch(action)\n  }\n  Object.keys(intermediate).forEach((item) => {\n    const [state, dispatch] = useReducer(intermediate[item].reducer, intermediate[item].initialState);\n    const boundActions = {}\n    const enhancedDispatch = applyMiddleware(dispatch)\n    for (let key in intermediate[item].actions) {\n      boundActions[key] = intermediate[item].actions[key](enhancedDispatch);\n    }\n    data[item] = {\n      state,\n      ...boundActions\n    }\n  })\n  return (\n    <GlobalContext.Provider value={data} >\n      <View style={styles.container}>\n        {children}\n        <Snackbar\n          style={styles.snackbar}\n          duration={3000}\n          visible={!!message}\n          onDismiss={() => setMessage('')}\n        >\n          <Text style={styles.messageText} >{message}</Text>\n        </Snackbar>\n      </View>\n    </GlobalContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  messageText: {\n    color: '#fff'\n  },\n  container: {\n    flex: 1,\n  },\n  snackbar: {\n  }\n})\n\nexport default GlobalProvider\n\n","import React from 'react'\nimport { View, StyleSheet, } from 'react-native'\nimport { ActivityIndicator, Text } from 'react-native-paper'\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: \"row\",\n  }\n})\n\nconst Loader = ({ loading = false, error = false, children = null }) => {\n  if (loading) {\n    return (\n      <View style={style.container} >\n        <ActivityIndicator size=\"large\" color=\"green\" />\n      </View>\n    )\n  } else if (error) {\n    return (\n      <View style={style.container} >\n        <Text>Something went wrong</Text>\n      </View>\n    )\n  }\n  return children\n}\n\nexport default Loader","import React, { useContext, useEffect, useState } from 'react';\nimport { View, StyleSheet, Dimensions, ScrollView, Image } from 'react-native';\nimport { Caption, Subheading, Paragraph, Chip, Button } from 'react-native-paper'\nimport Loader from '../../components/Loader';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction Detail({ route, navigation }) {\n  const { state, detailAction, detailResetAction } = useContext(GlobalContext).DETAIL_LOGIC;\n  const [episode, setEpisode] = useState(-1)\n\n  useEffect(() => {\n    if (route?.params?.id) {\n      detailAction(route.params.id)\n    }\n    return () => {\n      detailResetAction()\n    }\n  }, [route?.params?.id])\n\n  const onPressEpisode = (i) => {\n    setEpisode(i)\n    navigation.navigate('Episode', { id: route.params.id, episode: i })\n  }\n\n  const { data, loading, error } = state\n  const { height, width } = Dimensions.get(\"window\")\n  return (\n    <ScrollView contentContainerStyle={style.scrollContainer}>\n      <View style={style.container} >\n        <Loader loading={loading} error={error}>\n          <Image resizeMode={width > height ? \"contain\" : \"cover\"} style={{ height: height / 2 }} source={{ uri: data.image }} />\n          <View style={style.detailContainer} >\n            <Subheading style={style.title} >{data.title}</Subheading>\n            <View style={style.subDetailContainer} >\n              {data.relased ? <Caption style={style.caption} >{data.relased}</Caption> : null}\n              {data.type ? <Caption style={style.caption} >{data.type}</Caption> : null}\n              {data.status ? <Caption style={style.caption} >{data.status}</Caption> : null}\n            </View>\n            {data.summary ? <Paragraph style={style.paragraph} >{data.summary}</Paragraph> : null}\n            {data.genres && data.genres.length ? (\n            <View style={style.tagContainer} >\n              {data.genres.map((item, i) => (<Chip key={i} mode=\"outlined\" icon=\"movie\" style={style.tag} >{item}</Chip>))}\n            </View>\n            ) : null}\n            {data.totalepisode && parseInt(data.totalepisode) ? (\n              <View style={style.episodeContainer} >\n                {Array.from({ length: parseInt(data.totalepisode) }).map((item, i) => (\n                  <Button onPress={() => onPressEpisode(i + 1)} labelStyle={style.episodeText} style={style.episode} key={i} mode={episode === i + 1 ? \"contained\" : \"outlined\"}>EP-{i + 1}</Button>\n                ))}\n              </View>\n            ) : null}\n          </View>\n        </Loader>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst style = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1\n  },\n  container: {\n    flex: 1,\n  },\n  detailContainer: {\n    padding: 20\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  subDetailContainer: {\n    flexDirection: 'row'\n  },\n  caption: {\n    marginRight: 15\n  },\n  paragraph: {\n    marginVertical: 15\n  },\n  tagContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  tag: {\n    marginRight: 10,\n    marginBottom: 10\n  },\n  episodeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginVertical: 10\n  },\n  episode: {\n    width: 100,\n    marginLeft: 10,\n    marginBottom: 10,\n  },\n  episodeText: {\n    fontWeight: 'bold',\n  }\n});\n\nexport default Detail\n","import React, { useContext } from 'react'\nimport { Appbar, Switch } from 'react-native-paper';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction CustomNavigationBar({ navigation, previous }) {\n  const { state, themeAction } = useContext(GlobalContext).THEME_LOGIC;\n  const isThemeDark = state\n  return (\n    <Appbar.Header>\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      <Appbar.Content title=\"My Anime\" />\n        <Switch\n          color=\"#fff\"\n          value={isThemeDark}\n          onValueChange={() => themeAction()}\n        />\n    </Appbar.Header>\n  );\n}\n\nexport default CustomNavigationBar","import React from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport { Text } from 'react-native-paper'\n\nfunction Empty() {\n  return (\n    <View style={style.container}>\n      <Text>No anime found</Text>\n    </View>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n});\n\nexport default Empty\n","import React from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Card } from 'react-native-paper'\n\nexport default function ListItem({ data }) {\n  return (\n    <Card>\n      <Card.Cover style={{ height: 250, }} source={{ uri: data.image }} />\n      <Card.Title titleStyle={styles.title} title={data.title} subtitle={data.episodenumber ? `Episode ${data.episodenumber}` : ''} />\n    </Card>\n  )\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 13\n  }\n})\n","import React, { useEffect } from 'react'\nimport { FlatList, StyleSheet, TouchableOpacity, Dimensions, Platform } from 'react-native'\nimport Empty from '../../components/Empty'\nimport ListItem from '../../components/ListItem'\n\nexport default function AnimeList({ data, loadMoreRows, onRefresh, id, navigation }) {\n  useEffect(() => {\n    return () => {\n      console.log(id, 'unmounted')\n    }\n  }, [])\n  const onPress = (item) => {\n    navigation.navigate(item.episodenumber ? 'Episode' : 'Detail', { id: item.id, ...(item.episodenumber ? { episode: item.episodenumber } : {}) })\n  }\n  return (\n    <FlatList\n      ListEmptyComponent={<Empty />}\n      refreshing={false}\n      onRefresh={onRefresh}\n      style={{ flex: 1 }}\n      contentContainerStyle={styles.container}\n      columnWrapperStyle={styles.wrapper}\n      onEndReached={loadMoreRows}\n      onEndReachedThreshold={0.95}\n      data={data}\n      numColumns={4}\n      renderItem={({ item }) => (\n        <TouchableOpacity style={styles.card} onPressIn={() => Platform.OS === 'web' ? onPress(item) : null} onPress={() => Platform.OS !== 'web' ? onPress(item) : null} >\n          <ListItem data={item} />\n        </TouchableOpacity>\n      )}\n      keyExtractor={(item, i) => `${id}-${i}`}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 15\n  },\n  wrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  card: {\n    margin: 10,\n    width: Dimensions.get('window').width > 460 ? 420 : Dimensions.get('window').width - 40,\n  },\n})","import React, { useContext, useEffect, useRef } from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport Loader from '../../components/Loader';\nimport AnimeList from '../../container/AnimeList';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction Latest({ navigation }) {\n  const { state, latestAction, latestMoreAction } = useContext(GlobalContext).LATEST_LOGIC;\n  const from = useRef(1)\n\n  useEffect(() => {\n    latestAction(from.current)\n    return () => {\n      console.log(\"latest unmounted\")\n    }\n  }, [])\n\n  const loadMoreRows = () => {\n    if (state.next) {\n      from.current = from.current + 1\n      latestMoreAction(from.current)\n    }\n  }\n\n  const onRefresh = () => {\n    from.current = 1\n    latestAction(from.current)\n  }\n\n  return (\n    <View style={style.container}>\n      <Loader loading={state.loading} error={state.error}>\n        <AnimeList navigation={navigation} id=\"latest-list\" data={state.data} loadMoreRows={loadMoreRows} onRefresh={onRefresh} />\n      </Loader>\n    </View>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default Latest\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport { Searchbar } from 'react-native-paper';\nimport Loader from '../../components/Loader';\nimport AnimeList from '../../container/AnimeList';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction Search({ navigation }) {\n  const { state, searchAction, searchMoreAction } = useContext(GlobalContext).SEARCH_LOGIC;\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const from = useRef(1)\n\n  const allUrl = '/popular'\n  const searchUrl = '/search'\n\n  useEffect(() => {\n    searchAction(`${allUrl}/${from.current}`)\n  }, [])\n\n  const getUrl = (page = 1) => searchQuery.length ? `${searchUrl}/${searchQuery}/${page}` : `${allUrl}/${page}`\n\n  const onChangeSearch = query => setSearchQuery(query);\n\n  const loadMoreRows = () => {\n    if (state.next) {\n      from.current = from.current + 1\n      searchMoreAction(getUrl(from.current))\n    }\n  }\n\n  const onRefresh = () => {\n    from.current = 1\n    searchAction(getUrl(from.current))\n  }\n\n  const onSubmit = () => {\n    from.current = 1\n    searchAction(getUrl(from.current))\n  }\n\n  return (\n    <View style={style.container}>\n      <View style={style.searchBarContainer} >\n        <Searchbar\n          placeholder=\"Search\"\n          onChangeText={onChangeSearch}\n          value={searchQuery}\n          onIconPress={onSubmit}\n          onSubmitEditing={onSubmit}\n        />\n      </View>\n      <Loader loading={state.loading} error={state.error}>\n        <AnimeList navigation={navigation} id=\"search-list\" data={state.data} loadMoreRows={loadMoreRows} onRefresh={onRefresh} />\n      </Loader>\n    </View>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  searchBarContainer: {\n    marginHorizontal: 20,\n    marginTop: 20\n  }\n});\n\nexport default Search\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport {View, StyleSheet, Dimensions, ScrollView } from 'react-native';\nimport { Modalize } from 'react-native-modalize';\nimport { IconButton, Chip, Portal, Card, Button } from 'react-native-paper';\nimport Loader from '../../components/Loader';\nimport AnimeList from '../../container/AnimeList';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction Genre({ navigation }) {\n  const { state, genreAction, genreMoreAction } = useContext(GlobalContext).GENRE_LOGIC;\n  const { state: type, genreTypeAction } = useContext(GlobalContext).GENRE_TYPE_LOGIC\n  const theme = useContext(GlobalContext).THEME_LOGIC\n  const isThemeDark = theme.state\n  \n  const from = useRef(1)\n  const modalizeRef = useRef(null);\n  const genreType = useRef('popular')\n\n  const allUrl = '/popular'\n  const genreUrl = '/genre'\n\n  useEffect(() => {\n    genreAction(`${allUrl}/${from.current}`)\n    genreTypeAction()\n  }, [])\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const getUrl = (page = 1) => genreType.current !== 'popular' ? `${genreUrl}/${genreType.current}/${page}` : `${allUrl}/${page}`\n\n  const onSubmit = () => {\n    from.current = 1\n    genreAction(getUrl(from.current))\n  }\n\n  const onChangeGenre = (type) => {\n    genreType.current = type\n    modalizeRef.current?.close();\n    onSubmit()\n  };\n\n  const loadMoreRows = () => {\n    if (state.next) {\n      from.current = from.current + 1\n      genreMoreAction(getUrl(from.current))\n    }\n  }\n\n  const onRefresh = () => {\n    from.current = 1\n    genreAction(getUrl(from.current))\n  }\n\n  return (\n    <View style={style.container}>\n      <Card style={style.cardContainer} >\n        <Card.Content style={style.cardContent} >\n          <Chip>{genreType.current.toUpperCase()}</Chip>\n          <IconButton disabled={type.loading} icon=\"filter\" size={25} onPress={onOpen} />\n        </Card.Content>\n      </Card>\n      <Loader loading={state.loading} error={state.error}>\n        <AnimeList navigation={navigation} id=\"gerne-list\" data={state.data} loadMoreRows={loadMoreRows} onRefresh={onRefresh} />\n        <Portal>\n          <Modalize modalHeight={(3 * Dimensions.get('window').height) / 4} ref={modalizeRef}>\n            <Loader loading={type.loading} error={type.error} >\n              <ScrollView style={[style.typeContainer, { backgroundColor: !isThemeDark ? '#fff' : '#272727' }]} >\n                {type.data.map((item, i) => (\n                  <Button onPress={() => onChangeGenre(item)} key={item} mode=\"outlined\" style={style.typeButton} >{item.toUpperCase()}</Button>\n                ))}\n              </ScrollView>\n            </Loader>\n          </Modalize>\n        </Portal>\n      </Loader>\n    </View>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  cardContainer: {\n    height: 50,\n    marginHorizontal: 20,\n    marginTop: 20,\n  },\n  cardContent: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    paddingVertical: 0\n  },\n  typeButton: {\n    marginBottom: 5\n  },\n  typeContainer: {\n    flex: 1,\n    padding: 15\n  }\n});\n\nexport default Genre\n","import React, { useState, useRef, useEffect } from 'react';\nimport { View, StyleSheet, Button, useWindowDimensions } from 'react-native';\nimport { Video, AVPlaybackStatus } from 'expo-av';\n\nexport default function VideoPlayer({ url = 'http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4' }) {\n  const video = React.useRef(null);\n  const [status, setStatus] = React.useState({});\n  const { height, width } = useWindowDimensions();\n\n  const onPlaybackStatusUpdate = (status) => {\n    setStatus(() => status)\n  }\n  return (\n    <View style={styles.container}>\n      <Video\n        ref={video}\n        style={[styles.video, { height, width }]}\n        source={{\n          uri: url,\n        }}\n        shouldPlay\n        useNativeControls\n        resizeMode=\"contain\"\n        onPlaybackStatusUpdate={onPlaybackStatusUpdate}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: '#ecf0f1',\n  },\n  video: {\n    alignSelf: 'center',\n  },\n});","import React, { useContext, useEffect } from 'react';\nimport { View, StyleSheet, SafeAreaView, Platform } from 'react-native';\nimport { lockAsync, OrientationLock } from 'expo-screen-orientation';\nimport Loader from '../../components/Loader';\nimport VideoPlayer from '../../container/VideoPlayer';\nimport { GlobalContext } from '../../context/GlobalContext';\n\nfunction Episode({ route }) {\n  const { state, episodeAction, episodeResetAction } = useContext(GlobalContext).EPISODE_LOGIC;\n  useEffect(() => {\n    if(Platform.OS !== 'web') {\n      const changeScreenOrientation = async () => {\n        await lockAsync(OrientationLock.LANDSCAPE);\n      }\n      changeScreenOrientation()\n      return async () => {\n        await lockAsync(OrientationLock.PORTRAIT_UP);\n      }\n    }\n  }, [])\n  useEffect(() => {\n    if (route?.params?.id && route?.params?.episode) {\n      episodeAction(`${route.params.id}/${route?.params?.episode}`)\n    }\n    return () => {\n      episodeResetAction()\n    }\n  }, [route?.params?.id, route?.params?.episode])\n  const { data, loading, error } = state\n  const link = data?.links && Array.isArray(data.links) && data.links.length ? data.links[0] : {}\n  return (\n    <SafeAreaView style={style.container}>\n      <Loader loading={loading} error={error}>\n        {link.src ? <VideoPlayer url={link.src} /> : null}\n      </Loader>\n    </SafeAreaView>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default Episode\n","import React, { useContext } from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native'\nimport {\n  NavigationContainer,\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport {\n  DarkTheme as PaperDarkTheme,\n  DefaultTheme as PaperDefaultTheme,\n  Provider as PaperProvider,\n} from 'react-native-paper';\nimport * as Linking from 'expo-linking';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport Detail from './screens/Detail';\nimport CustomNavigationBar from './container/CustomNavigationBar';\nimport Latest from './screens/Latest';\nimport Search from './screens/Search';\nimport Genre from './screens/Genre';\nimport  { GlobalContext } from './context/GlobalContext';\nimport Episode from './screens/Episode';\n\nconst Stack = createStackNavigator();\nconst RootStack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n\nconst CombinedDefaultTheme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#d50000',\n    text: '#000'\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#d50000',\n    text: '#fff'\n  },\n};\n\n\nconst prefix = Linking.createURL('/');\n\nexport default function Main() {\n  const { state } = useContext(GlobalContext).THEME_LOGIC;\n  const isThemeDark = state\n  let theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n  const linking = {\n    prefixes: [prefix, 'https://gallant4473.github.io'],\n    config: {\n      screens: {\n        Main: {\n          screens: {\n            Dashboard: {\n              screens: {\n                Latest: 'my-anime/latest',\n                Genre: 'my-anime/genre',\n                Search: 'my-anime/search'\n              }\n            },\n            Detail: 'my-anime/detail/:id',\n          }\n        },\n        Episode: 'my-anime/episode/:id/:episode'\n      }\n    }\n  };\n  return (\n    <PaperProvider theme={theme} >\n      <NavigationContainer linking={linking} theme={theme} >\n        <View style={styles.container} >\n          <RootStack.Navigator mode=\"modal\">\n            <RootStack.Screen\n              name=\"Main\"\n              options={{ headerShown: false }}\n            >\n              {() => (\n                <Stack.Navigator\n                  initialRouteName=\"Dashboard\" \n                  screenOptions={{\n                    header: (props) => <CustomNavigationBar {...props} />,\n                  }}\n                >\n                  <Stack.Screen name=\"Dashboard\" >\n                    {() => (\n                      <Tab.Navigator backBehavior=\"initialRoute\" initialRouteName=\"Latest\">\n                        <Tab.Screen component={Latest} name=\"Latest\" options={{ title: \"RECENT RELEASE\", tabBarIcon: ({ color }) => <MaterialIcons name=\"new-releases\" size={24} color={color} /> }} />\n                        <Tab.Screen name=\"Genre\" component={Genre} options={{ title: \"GENRE\", tabBarIcon: ({ color }) => <MaterialIcons name=\"movie-filter\" size={24} color={color} /> }} />\n                        <Tab.Screen name=\"Search\" component={Search} options={{ title: \"SEARCH\", tabBarIcon: ({ color }) => <MaterialCommunityIcons name=\"movie-search\" size={24} color={color} /> }} />\n                      </Tab.Navigator>\n                    )}\n                  </Stack.Screen>\n                  <Stack.Screen name=\"Detail\" component={Detail} />\n                </Stack.Navigator>\n              )}\n            </RootStack.Screen>\n            <RootStack.Screen options={{ headerShown: false }} name=\"Episode\" component={Episode} />\n          </RootStack.Navigator>\n          <StatusBar />\n        </View>\n      </NavigationContainer>\n    </PaperProvider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import 'react-native-gesture-handler';\nimport { StyleSheet, } from 'react-native'\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport  GlobalProvider from './src/context/GlobalContext';\nimport Main from './src';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <GlobalProvider >\n        <Main />\n      </GlobalProvider>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"sourceRoot":""}